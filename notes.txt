1.To note, pay attention to Makefile in tutorial one: the path in Makefile may be wrong, must be adapted to your machine.

 .proto is a protobuf definition file that defines a gRPC service

GRPC is a high performance, open-source, universial RPC framework

Compiling the .proto with protocol tool with the grpc plugin will marshal/unmarshal the msg btw Go code and buffer protocol buffer binary msg.

cli.go: an interface takes a JSON consignment file and interact with gRPC service<br/> 
Protocol Buffers: protocol buffers is a method of serializing structured data. It is useful in developing programs to communicate with each other over a wire or for storing data.

How Protocol Buffers works: In a proto definition file (.proto) developer defines the service and data structure that called message and compile it with protoc.

This compilation generates code could be invoked by a sended or recipient of these data structures. For example, example.proto will produce example.pb.cc and example.pb.h, which will define c++ classes for each message and service that example.proto defines.

What-to-do in proto definition file:first of all, define the service, this should contain the mehtods you wish to expose to other services. Then you define the messages, which are effectively the data structure.

In proto, message is handled by protobuf and service is handled by gRPC plugin which compiles code to interact with service.
 
Makefile: call protoc library, which is responsible for compiling the protobuf definition into code. In addition usage of gRPC is specified as well as context and ouput path 
 